@charset "utf-8";

/* 화면 크기 759 이상일 경우 스타일 
-> 모바일 반응형 같은 경우에는 최소크기 기준이 없음 
-> 가로너비 %계산 부분이 있음 
-> 유동값 계산식
객체/기준값=수치값*100=값%/vw/vh
-> 유동단위값
1) %단위 부모기준
2) vw단위 윈도우의 가로크기 
3) vh단위 윈도우의 세로크기 */
@media all and (max-width:759px)  {
    #wrap{
        width: 100%;
        margin: 0 auto;
        background-color: gray;
    }

    /* ********** 헤더영역 **********  */
    header{
        height: 25px;
        background-color: orangered;
        padding: 15px 0;
    }

    /* 자식 float 정렬시 생기는 문제점 해결 - 가상의 막내요소만들기 */
    header::after{
        content: "";
        display: block;
        clear: both;
    }

    #logo {
        width: 150px;
        height: 25px;
        background-color: royalblue;
        margin: 0 auto;
    }

    /* 모바일에서는 안 보이는 메뉴 */
    #main_menu{
        display: none;
    } 
    
    /* 모바일에서만 보이는 영역 */
    #toggle_wrap{
        position: relative;
        /* 부모의 최상단으로 이동하여 위치 */
        top:-40px;
        /* 부모영역에서 중앙에 위치시켜주기 위해서 55-30=25/2만큼 계산한 뒤, 다시 내려주기 */
        margin-top: 12.5px;
        right: 15px;
        float: right;
        /* -> float사용시 position속성에 relative라는 값으로 설정했을 때
        내 앞에 있는 형제자매요소는 margin: 0 auto를 유지하면서
        나의 위치를 설정할 수 있음 */
    }
    
    /* input 태그는 보이지 않으면서 특징만 활용
    아래 코드 -> input 태그 중에서 checkbox를 활용한다 */
    input[type="checkbox"]{
        display: none;
    }

    #toggle_label{
        width: 30px;
        height: 30px;
        display: block; /* 여기 부분 이해 안 됨 */
        background-color: aqua;
        cursor: pointer; /* 커서 누르면 포인트 나옴 */
        padding: 10px 5px;
        box-sizing: border-box;
    }

    #toggle_label::before, #toggle_label::after {
        content: "";
        width: 100%;
        height: 3px;
        display: block;
        background-color: white;
    }

    #toggle_label::after{
        /* 10-(3*2)=4 */
        margin-top: 4px;
    }

    #toggle_con{
        display: none;
        width: 39.5vw;
        /* 300(기준이되는사이즈)/759(최소화면, 760으로 설정해도 됨) = 0.395*100 */
        
        /* -> 최소가로값 */
        min-width: 300px;
        /* -> 최대가로값 */
        max-width: 400px;
        position: absolute;
        right: 0;
        top: 30px; /* 버튼보다 내려올 수 있도록 */
    }

    #toggle_con >li {
        line-height: 50px;
        font-size: 20px;
        background-color: blueviolet;
        border-bottom: 1px solid rgba(0,0,0,0.5);
        text-align: center;
    }

    /* checked - 상태선택자 */
    /* 후자선택자 
    -> 형제자매의 관계의 객체들 중 기준이 되는 객체
    1) 바로 뒤에 있는 객체 선택(+)
    2) 그냥 뒤에 있는 객체 선택(~) */
    input[type="checkbox"]:checked~#toggle_con{
        display: block;
    }
    
    /* ********** 컨텐츠영역 ********** */
    #slide_container{
        height: 300px;
        background-color: yellow;
    }
    
    #con_1, #con_2{
        /* height: 100px; */
        /* 자식 float 정렬시 생기는 문제점 해결방법
        -> 높이값 미지정 + overflow: hidden 설정  */
        overflow: hidden;
        background-color: aqua;
    }

    #slide_container, #con_1, #con_2 {
        margin: 30px 0;
        /* 마진병합현상이 존재
        -> 인접한 블럭형식태그의 위아래가 겹칠 때 
        -> 마진값이 합쳐짐 */
    }

    /* 한쪽 여백 지정 */
    .in_box{
        width: 100%;
        height: 100px;
        /* float: left;
        margin-right: 15px;  오른쪽여백 */
        background-color: blue;
        margin-bottom: 15px;
    }

    .in_box:last-child {
        margin-bottom: 0;
    }

    footer{
        height: 80px;
        background-color: deeppink;
    }
}